imports:
    - { resource: parameters_prod.yml }
    - { resource: security.yml }
    - { resource: doctrine_extensions.yml }

framework:
    #esi:             ~
    #translator:      { fallback: "%locale%" }
    translator:     { fallback: pt_BR }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    # default_locale:  "%locale%"
    default_locale:  pt_BR
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    strict_variables: "%kernel.debug%"
    cache: false

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ PhpbrAppBundle ]
    #java: /usr/bin/java
    filters:
        compass:
            load_paths:
                - '%kernel.root_dir%/../src/Phpbr/AppBundle/Resources/public/bower_components/foundation/scss'
            apply_to: ".(scss|sass)$"
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"
    assets:
        meltdown_eot:
            inputs:
                - '%kernel.root_dir%/../src/Phpbr/AppBundle/Resources/public/assets/fonts/meltdown.eot'
            output: fonts/meltdown.eot
        meltdown_svg:
            inputs:
                - '%kernel.root_dir%/../src/Phpbr/AppBundle/Resources/public/assets/fonts/meltdown.svg'
            output: fonts/meltdown.svg
        meltdown_ttf:
            inputs:
                - '%kernel.root_dir%/../src/Phpbr/AppBundle/Resources/public/assets/fonts/meltdown.ttf'
            output: fonts/meltdown.ttf
        meltdown_woff:
            inputs:
                - '%kernel.root_dir%/../src/Phpbr/AppBundle/Resources/public/assets/fonts/meltdown.woff'
            output: fonts/meltdown.woff

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

fos_user:
    db_driver: orm
    firewall_name: main
    user_class: Phpbr\AppBundle\Entity\User
    profile:
        form:
            type: phpbr_user_profile
    registration:
        form:
            type: Phpbr\AppBundle\Form\Type\RegistrationFormType

hwi_oauth:
    #this is my custom user provider, created from FOSUBUserProvider - will manage the 
    #automatic user registration on your site, with data from the provider (facebook. google, etc.)
    #and also, the connecting part (get the token and the user_id)
    connect:
        account_connector: my_user_provider
    # name of the firewall in which this bundle is active, this setting MUST be set
    firewall_name: main
    fosub:
        username_iterations: 30
        properties:
            # these properties will be used/redefined later in the custom FOSUBUserProvider service.
            facebook: facebook_id
    resource_owners:
        facebook:
            type:                facebook
            client_id:           1111111111111
            client_secret:       AAAAAAAAAAAAAAAAAAAAAAAAA
    # here you will add one (or more) configurations for resource owners

knp_disqus:
    api_key: %knp_disqus.api_key%
    secret_key: %knp_disqus.secret_key% # optional, for SSO auth only
    forums:
        lorem:
            shortname: %knp_disqus.lorem.shortname%
#            cache: my_cache_for_lorem # cache template key, usage described below

white_october_pagerfanta:
    exceptions_strategy:
        out_of_range_page:        to_http_not_found
        not_valid_current_page:   to_http_not_found

gregwar_captcha:
    width: 200
    height: 50
    length: 4

# app/config/config.yml
nelmio_api_doc: ~

snc_redis:
    clients:
        default:
            type: phpredis
            alias: default
            dsn: redis://localhost
            logging: %kernel.debug%
        cache:
            type: phpredis
            alias: cache
            dsn: redis://localhost/1
            logging: true
            options:
                profile: 2.4
                connection_timeout: 10
                connection_persistent: true
                read_write_timeout: 30
                iterable_multibulk: false
                throw_errors: true
                cluster: Snc\RedisBundle\Client\Predis\Connection\PredisCluster
                replication: false
    session:
        client: default
        prefix: phpbr
        use_as_default: true

doctrine_migrations:
    dir_name: "%kernel.root_dir%/DoctrineMigrations"
    namespace: Application\Migrations
    table_name: migration_versions
    name: Application Migrations

services:
    fos_user.doctrine_registry:
        alias: doctrine

